#
# Copyright or © or Copr. IETR/INSA - Rennes (2011 - 2020) :
#
# Alexandre Honorat [alexandre.honorat@insa-rennes.fr] (2019 - 2020)
# Antoine Morvan [antoine.morvan@insa-rennes.fr] (2017 - 2019)
# Clément Guy [clement.guy@insa-rennes.fr] (2014 - 2015)
# Daniel Madroñal [daniel.madronal@upm.es] (2018 - 2019)
# Julien Heulot [julien.heulot@insa-rennes.fr] (2014 - 2020)
# Karol Desnos [karol.desnos@insa-rennes.fr] (2012)
# Maxime Pelcat [maxime.pelcat@insa-rennes.fr] (2011 - 2013)
#
# This software is a computer program whose purpose is to help prototyping
# parallel applications using dataflow formalism.
#
# This software is governed by the CeCILL  license under French law and
# abiding by the rules of distribution of free software.  You can  use,
# modify and/ or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info".
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability.
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or
# data to be ensured and,  more generally, to use and operate it in the
# same conditions as regards security.
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.
#

Error.description=See Console for more informations
Error.title=Error while opening PiScenario
NewPiConstraintsPage.trclmnActors.text=Actors
NewPiConstraintsPage.trclmnNewColumn.text=New Column
Shortcut.browseScenarioTitle=Select an existing scenario file
# Overview
Overview.algorithmBrowseTitle=Select an existing algorithm file
Overview.algorithmDescription=Enter a file path that contains the algorithm
Overview.algorithmFile=Algorithm file path
Overview.algorithmFileEdit=Edit file
Overview.architectureBrowseTitle=Select an existing architecture file
Overview.architectureDescription=Enter a file path that contains the architecture
Overview.architectureFile=Architecture file path
Overview.architectureFileEdit=Edit file
Overview.simulationTitle=Number of executions of the top-level graph
Overview.simulationDescription=Enter a number of executions of top-level PiGraph for simulation (1 is the default value for PiGraphs with no dynamic parameters)
Overview.simulationEdit=Number of executions
Overview.browse=Browse
Overview.title=Overview
# Mapping constraints
Constraints.title=Mapping constraints
Constraints.coreSelectionTooltip=Select the operator to set execution constraints on
Constraints.description=The constraints precise which regular actor can be executed on the given operator. For special actors (as broadcasts), see the simulation tab.
Constraints.file=Constraints file path
Constraints.fileDescription=Enter a path to an Excel file (.xls) that contains timings with actor names in the first column and timings per operator in the next columns. Operators with timings will be automatically added to the mapping constraints while operators without timings will be removed from the mapping constraints.
Constraints.fileEdit=Edit file
Constraints.fileBrowseTitle=Select a timings Excel file (.xls) to import mapping constraints from
RelativeConstraints.constraintColumn=group ID
RelativeConstraints.description=The relative constraints can associate each actor to a group given by a number. All instances of actors of a given group are mapped on the same operator. -1 means that no group is selected. Associating one actor alone to a group ensures that all its occurences share a same processor.
RelativeConstraints.dialog.message=Enter a new relative constraint for actor\: 
RelativeConstraints.dialog.title=Change relative constraints
RelativeConstraints.export.dialog=Enter the name of a new Excel file (.xls)
RelativeConstraints.exportExcel=Export relative constraints
RelativeConstraints.file=Relative constraints file path
RelativeConstraints.fileBrowseTitle=Select a relative constraints Excel file (.xls)
RelativeConstraints.fileDescription=Enter a path to an Excel file (.xls) that contains relative constraints with actor names as rows and an attribute rel_con_i with i an integer.
RelativeConstraints.fileEdit=Edit file
RelativeConstraints.fileRefresh=Refresh
RelativeConstraints.invalid=Invalid relative constraint group number
RelativeConstraints.taskColumn=Actor name
RelativeConstraints.title=Relative Constraints
# Timings
Timings.MemcopySpeeds.description=Each operator definition can be linked to a couple of values (memcpySetupTime, memcpySpeed) respectively setting a time to initiate a memcopy and a speed (in memory unit per time unit).
Timings.MemcopySpeeds.dialog.setupMessage=Enter a new memcpy Setup Time for operator 
Timings.MemcopySpeeds.dialog.setupTitle=Set memcpy Setup Time
Timings.MemcopySpeeds.dialog.timePerUnitMessage=Enter a new memcpy Speed for operator 
Timings.MemcopySpeeds.dialog.timePerUnitTitle=Set memcpy Speed
Timings.MemcopySpeeds.opDefColumn=operator definition
Timings.MemcopySpeeds.setupTimeColumn=memcpySetupTime
Timings.MemcopySpeeds.timePerUnitColumn=memcpySpeed
Timings.MemcopySpeeds.title=Memcopy speeds
Timings.coreSelectionTooltip=Select the operator to edit the actor timings
Timings.timingTypeSelectionTooltip=Select the type of timing to edit the actor timings
Timings.description=The timings associate to each couple (operator definition, actor) the time needed to execute one actor firing on the operator.
Timings.dialog.message=Enter a new timing for actor\: 
Timings.dialog.title=Change timing
Timings.invalid=Invalid timing
Timings.taskColumn=Actor name
Timings.timeColumn=Time
Timings.timingExport.dialog=Enter the name of a new Excel file (.xls)
Timings.timingExportExcel=Export Timings
Timings.timingFile=Timings file path
Timings.timingFileBrowseTitle=Select a timing Excel file (.xls), a csv file or a .papify one. Addtionally, Import papify-output will parse the timing from the folder generated using PAPIFY
Timings.timingImportPapifyFolder=Import papify-output
Timings.timingImportPapifyFolderTitle=Select a papify-output in order to import all papify-output timing information
Timings.timingFileDescription=Enter a path to an Excel file (.xls) or a csv file that contains timings with full actor names in the first column and timings per operator in the next columns.\n/!\\ Attention, only the regular "Execution Time" type is set.\nExample:\n\nActors;x86\nvertex/path/to/actor;765
Timings.timingFileEdit=Edit file
Timings.timingFileRefresh=Refresh
Timings.title=Timings
# Simulation information
Simulation.title=Simulation
Simulation.mainOperator.title=Main operator selection
Simulation.mainOperator.description=Select the operator that will be used as main operator. The mapping always starts with an homogeneous simulation\: the algorithm is simulated on an imaginary architecture with an infinite number of operators with the same type as the main operator. The mapping will be better if the main operator is chosen to be the one which necessitates the best optimization.
Simulation.mainOperatorSelectionTooltip=Select the main operator
Simulation.mainMedium.title=Main ComNode selection
Simulation.mainMedium.description=Select the ComNode that will be used as main ComNode. The mapping always starts with an homogeneous simulation\: the algorithm is simulated on an imaginary architecture with an infinite number of operators totally connected by media with the type selected here. The mapping will be better if the main ComNode is chosen to be the one which necessitates the best optimization.
Simulation.mainMediumSelectionTooltip=Select the main ComNode
Simulation.DataTypes.title=Edit data types
Simulation.DataTypes.description=Set the data type sizes in bit. These sizes will be used for deployment simulations
Simulation.DataTypes.typeColumn=Data type
Simulation.DataTypes.sizeColumn=Size
Simulation.DataTypes.dialog.title=Change data type size
Simulation.DataTypes.dialog.message=Enter a new size for data type\: 
Simulation.DataTypes.addType=Add data type
Simulation.DataTypes.addType.dialog.title=Enter data type name
Simulation.DataTypes.addType.dialog.message=Enter a name for new data type\:
Simulation.DataTypes.removeType=Remove data type
Simulation.DataTypes.fetchType=Fetch all data types
Simulation.DataAverageSize.title=Edit average transfer size
Simulation.DataAverageSize.description=Set the average transfer size sizes in bit. This size is used while calculating the routing table. The routes between operators are static and will be optimized for the given data size.
Simulation.SpecialVertex.title=Select the operators to execute broadcasts/explode/implode
Simulation.SpecialVertex.description=Be careful\: a broadcasts/explode/implode can only be mapped on either its predecessors operators or its successors operators. Do not reduce excessively the operator capabilities to broadcasts/explode/implode or errors will appear during mapping. Selecting no operator to execute broadcasts/implode/explode actually selects them all.
#Parameters
Parameters.title=Parameters
Parameters.description=Parameters associate values to each parameters
Variables.title=Variables
Variables.description=Override the variable values of the top graph. Warnings appear in the console if some variables do not exist in the top graph.
Variables.variableNameColumn=Variable Name
Variables.variableValueColumn=Variable Value
Variables.dialog.title=Variable value
Variables.dialog.message=Enter an integer value for variable\: 
Variables.excelFile=Variables file path
Variables.excelFileDescription=Enter a path to an Excel file (.xls) that contains variable names and their values in the next column. Only the variables existing in the top graph can be imported.
Variables.excelFileEdit=Edit file
Variables.excelFileBrowseTitle=Select a variables Excel file (.xls)
Variables.variablesExportExcel=Export Variables
Variables.variablesFileRefresh=Refresh
Variables.addVar=Add Variable
Variables.addVar.dialog.title=Add variable
Variables.addVar.dialog.message=Enter a variable name
Variables.removeVar=Remove Variable
# Codegen
Codegen.title=Code generation properties
Codegen.codeDirectory=Code generation directory
Codegen.codeDirectoryDescription=Enter a directory where all the generated source files will be stored
Codegen.codeDirectoryEdit=Edit directory
Codegen.codeDirectoryBrowseTitle=Browse code generation directory
Codegen.browse=Browse

#Papify
Papify.title=PAPIFY
Papify.file=PAPIFY file path
Papify.papifyFileEdit=Edit file
Papify.fileDescription=Enter a path to an xml file that contains the output of the papi_xml_event_info command executed within the target platform. PAPI components and their associated events will be automatically added to the selection options.
Papify.fileBrowseTitle=Select an event summary xml file to import monitoring events from
Papify.titlePESection=PAPIFY PE configuration
Papify.descriptionPE=Each SLAM processing element instance needs to be associated with its corresponding PAPI component
Papify.titleActorSection=PAPIFY actor configuration
Papify.descriptionActor=Each actor needs to be associated with its corresponding event(s)
Papify.coreSelectionTooltipActor=Select the actor to select its PAPIFY configuration
Papify.titleModelSection=KPI estimation based on PAPIFY
Papify.descriptionModel=In this section, the energy model for each type of PE is included. The events with a value different to 0 will be considered as valid and taken into account
Papify.exportButtonText=Export model

#Energy tab
Energy.title=Energy
Energy.fileTitle=Energy file path
Energy.fileDescription=Enter a path to an Excel file (.xls) or a .papify that contains energy with actor names as rows and operator definitions as columns. The Energy actors <-> PE type section will be updated accordingly. Additionally, if a papify-output folder is selected, the model from PAPIFY tab will be applied to parse energy values
Energy.fileEdit=Edit file
Energy.fileBrowseTitle=Select an Excel energy file or a .papify one
Energy.actorsTitle=Energy actors <-> PE type
Energy.actorsDescription=This section includes all the information related to energy consumption of each actor when being executed on each type of processing element. This energy is expected to be in uJ
Energy.objectiveTitle=Performance objective
Energy.objectiveDescription=This section contains the performance objective to reach during the energy-aware mapping/scheduling
Energy.platformTitle=Platform power consumption
Energy.platformDescription=This section includes all the information related to the static power consumed by the platform. Specifically, "Base" represents the baseline of power and, the rest represents the power consumption increment when activating one new PE of a specific type
Energy.commsTitle=Communication energy consumption
Energy.commsDescription=This section includes all the information related to the energy consumption due to data communication. Specifically, the energy required to transmit 1 byte from 1 type of PE to another type of PE [pJ] 
Energy.fileRefresh=Refresh
Energy.energyExportExcel=Export
Energy.opDefColumn=Operator Definition
Energy.powerPlatformColumn=Associated power [W]
Energy.objectiveLabel=Objective - in executions per second: 
Energy.commsHeader=Source \\ Destination 
Energy.energyImportPapifyFolder=Import papify-output
Energy.energyImportPapifyFolderTitle=Select a papify-output in order to import all papify-output energy information
Energy.dialog.message=Enter a new energy for actor\: 
Energy.dialog.title=Change energy

